dlgCommit.replaceMessage.btn"Replace"=Replace
dlgCommit.replaceMessage.chk=Always replace
dlgCommit.replaceMessage.fur=After replacing you can find the previous message when clicking the history button.
dlgCommit.replaceMessage.hdl=Replace the existing message?
dlgCommit.replaceMessage.tle=Replace Message
dlgDgAbout.edt"Maximum Heap"=Maximum Heap
dlgQBugReportSend.btn"Ignore \(Dangerous\)"=Ignore \(Dangerous\)
dlgQBugReportSend.btn"Just Exit"=Just Exit
dlgQBugReportSend.btn"Report && Exit"=Report && Exit
dlgRewriteTextFiles.btn"Fix Line-Endings"=Fix Line-Endings
dlgRewriteTextFiles.chk"Enforce line-ending on end of file"=\
 Enforce line-ending on end of file
dlgRewriteTextFiles.edt"Line-Endings"=Line-Endings
dlgRewriteTextFiles.hdl=Rewrite text files with selected line-endings
dlgRewriteTextFiles.inf=Select the line-endings that should be used to write the text files.
dlgRewriteTextFiles.tle=Fix Line-Endings
dlgScCustomizeToolBar.btn"Add"=Add
dlgScCustomizeToolBar.btn"Remove"=Remove
dlgScCustomizeToolBar.btn"Reset to Default"=Reset to Default
dlgScCustomizeToolBar.chk"Show text below icon"=Show text below icon
dlgScCustomizeToolBar.col"Available"=Available
dlgScCustomizeToolBar.col"Selected"=Selected
dlgScCustomizeToolBar.tle=Configure Toolbar
dlgScEvaluationReminderContinue.btn"Continue"=Continue
dlgScEvaluationReminderContinue.btn"Register"=Register
dlgScEvaluationReminderContinue.fur%2=To use SmartGit in a commercial environment, you will have to \[$1 purchase a license\].\n\nFor \[$2 certain uses\] we grant free licenses.
dlgScEvaluationReminderContinue.hdl%1=Your SmartGit evaluation ends in $1 days.
dlgScEvaluationReminderContinue.tle=Evaluation
dlgScFileComparatorAdd.mni"Base Encoding"=Base Encoding
dlgScFileComparatorAdd.mni"Base File"=Base File
dlgScFileComparatorAdd.mni"Base Title"=Base Title
dlgScFileComparatorEdit.mni"Base Encoding"=Base Encoding
dlgScFileComparatorEdit.mni"Base File"=Base File
dlgScFileComparatorEdit.mni"Base Title"=Base Title
dlgScHostKeyVerifier.btn"Accept"=Accept
dlgScHostKeyVerifier.btn"Reject"=Reject
dlgScHostKeyVerifier.edt"Fingerprint"=Fingerprint
dlgScHostKeyVerifier.edt"Server"=Server
dlgScHostKeyVerifier.fur=If you are unsure, contact your administrator.
dlgScHostKeyVerifier.hdl=Please confirm the SSH server fingerprint.
dlgScHostKeyVerifier.tle=SSH Server Verification
dlgScJiraCommitMessageSelect.chk"Query Configuration"=Query Configuration
dlgScJiraResolveIssue.btn"Ignore"=Ignore
dlgScJiraResolveIssue.btn"Resolve Issue"=Resolve Issue
dlgScPasswordMasterChangeSuccessfulChange.fur=Be sure to remember it, otherwise you won't be able to access your stored passwords anymore.
dlgScPasswordMasterChangeSuccessfulChange.hdl=The master password has been changed.
dlgScPasswordMasterChangeSuccessfulChange.tle=Change Master Password
dlgScTextReplace.btn"Replace All"=Replace All
dlgSelectDiff.col"Command"=Command
dlgSelectDiff.hdl=Select the diff tool
dlgSelectDiff.inf=Select which matching diff tool should be used.
dlgSelectDiff.tle=File Compare
dlgSgAbout.edt"Maximum Heap"=Maximum Heap
dlgSgAuthenticationShowPassword.edt"Password"=Password
dlgSgAuthenticationShowPassword.tle%1=Password for $1
dlgSgBisectResult.btn"Continue Bisect"=Continue Bisect
dlgSgBisectResult.btn"Leave Bisect"=Leave Bisect
dlgSgBisectResult.hdl=Bisect has determined the first bad commit.
dlgSgBisectResult.tle=Bisect Finished
dlgSgBranchAddCheckout.err"A remote branch with this name already exists. Use a different name."=\
 A remote branch with this name already exists. Use a different name.
dlgSgBranchAddCheckout.err"This branch already exists at this commit."=\
 This branch already exists at this commit.
dlgSgBranchDeleteRemoteConfirmSingle.chk"Delete from remote repository '$1'"=Delete from remote repository '$1'
dlgSgBranchDeleteRemoteConfirmSingle.hdl"Do you want to delete the branch '$1'?"=\
 Do you want to delete the branch '$1'?
dlgSgBranchTrackingResetConfirm.btn"Stop Tracking"=Stop Tracking
dlgSgBranchTrackingResetConfirm.fur=The necessary configuration will be performed in the .git/config file.
dlgSgBranchTrackingResetConfirm.hdl%2=Should branch '$1' stop tracking '$2'?
dlgSgBranchTrackingResetConfirm.tle=Stop Tracking
dlgSgBugReportSettings.chk"Send 'crash footprints' after an internal error has occurred"=\
 Send 'crash footprints' after an internal error has occurred
dlgSgCheckoutTarget.wrn"Local branch is ahead of remote branch. The checkout will end up at a more recent commit."=\
 Local branch is ahead of remote branch. The checkout will end up at a more recent commit.
dlgSgCherryPickConfigurationFile.btn"Cherry-Pick"=Cherry-Pick
dlgSgCherryPickConfigurationFile.fur=Only changes of these files will be cherry-picked \(without committing\).
dlgSgCherryPickConfigurationFile.hdl%1=Do you want to cherry-pick changes of '$1'?
dlgSgCherryPickConfigurationFile.tle=Cherry-Pick
dlgSgClone.chk"Skip large files \(\"partial clone\"\)"=Skip large files \("partial clone"\)
dlgSgClone.edt"Omit files larger than"=Omit files larger than
dlgSgCommitSingleOrAllWorkingTreeChanges.btn"Commit All Changes"=Commit All Changes
dlgSgCommitSingleOrAllWorkingTreeChanges.btn"Commit File"=Commit File
dlgSgCommitSingleOrAllWorkingTreeChanges.fur=You either can commit the single selected file or all changed files.
dlgSgCommitSingleOrAllWorkingTreeChanges.hdl=What do you want to commit?
dlgSgCommitSingleOrAllWorkingTreeChanges.tle=Commit
dlgSgConflictSolverMarkResolved.btn"Leave Conflicted"=Leave Conflicted
dlgSgConflictSolverMarkResolved.btn"Mark Resolved"=Mark Resolved
dlgSgConflictSolverMarkResolved.fur=To complete a conflict resolution, the file needs to be marked as resolved \(git stage\). Until marked as resolved, the file remains in conflicted state and you can try other conflict resolutions.
dlgSgConflictSolverMarkResolved.hdl=Do you want to mark the file as resolved?
dlgSgConflictSolverMarkResolved.tle=Mark Resolved
dlgSgDiscard.mni"Copy Selection in Column"=Copy Selection in Column
dlgSgDiscard.mni"Directory"=Directory
dlgSgDiscard.mni"Name"=Name
dlgSgDiscard.mni"Show Changes"=Show Changes
dlgSgDiscard.mni"Toggle"=Toggle
dlgSgErrorUtilsClientException.fur%1=GIT_DIR for repository at '$1' does not exist.
dlgSgGitLabGenerateToken.edt"Code"=Code
dlgSgHostingProviderAdd.chk"Use a custom Azure DevOps server"=\
 Use a custom Azure DevOps server
dlgSgHostingProviderAdd.edt"Server URL \(including collection\)"=Server URL \(including collection\)
dlgSgHostingProviderAdd.lbl"For example: https://azure.devops.server/DefaultCollection"=For example: https://azure.devops.server/DefaultCollection
dlgSgHostingProviderAdd.lbl"The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your Azure DevOps account settings."=\
 The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your Azure DevOps account settings.
dlgSgHostingProviderAdd.lbl"The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your GitHub account settings."=\
 The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your GitHub account settings.
dlgSgHostingProviderEdit.chk"Use SSL client certificates \(usually not required\)"=\
 Use SSL client certificates \(usually not required\)
dlgSgHostingProviderEdit.edt"Account"=Account
dlgSgHostingProviderEdit.edt"Password"=Password
dlgSgHostingProviderEdit.lbl"The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your GitHub account settings."=\
 The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your GitHub account settings.
dlgSgHostingProviderEdit.wrn"Connection to '$1' failed: $2"=Connection to '$1' failed: $2
dlgSgHostingProviderSelectRepository.mni"Copy Selection in Column"=Copy Selection in Column
dlgSgHostingProviderSelectRepository.mni"Name"=Name
dlgSgHostingProviderSelectRepository.mni"Owner"=Owner
dlgSgHostingProviderSelectRepository.mni"Repository"=Repository
dlgSgIgnoreChanged.btn"Discard Changes"=Discard Changes
dlgSgIgnoreChanged.fur=The changes will be discarded when proceeding!
dlgSgIgnoreChanged.hdl=Are you sure to remove changed files?
dlgSgIgnoreChanged.tle=Ignore
dlgSgLogCompareWithWorkingTree.btn"Compare After"=Compare After
dlgSgLogCompareWithWorkingTree.btn"Compare Before"=Compare Before
dlgSgLogCompareWithWorkingTree.edt"Working Tree File"=Working Tree File
dlgSgLogCompareWithWorkingTree.hdl=Compare repository file with local file
dlgSgLogCompareWithWorkingTree.inf=Select whether to compare with the repository file as it was Before or After the selected commit.
dlgSgLogCompareWithWorkingTree.tle=Compare with Working Tree
dlgSgLogGraphRootSwitch.mni"Toggle"=Toggle
dlgSgMergeHowToMerge.btn"Squash-Merge"=Squash-Merge
dlgSgOpenRepository.err"Please specify the root directory of a Git repository."=\
 Please specify the root directory of a Git repository.
dlgSgOpenRepositoryInitializeGit.btn"Initialize"=Initialize
dlgSgOpenRepositoryInitializeGit.fur=The specified directory does not appear to be a valid Git repository.
dlgSgOpenRepositoryInitializeGit.hdl%1=Should '$1' be initialized as a new Git repository?
dlgSgOpenRepositoryInitializeGit.tle=Add or Create Repository
dlgSgOutput.chk"Show automatically for failed command"=Show automatically for failed command
dlgSgPreferences.cdl"Git Config"=Git Config
dlgSgPreferences.cdl"Log and Working Tree window"=Log and Working Tree window
dlgSgPreferences.cdl"Standard Window"=Standard Window
dlgSgPreferences.chk"Always fetch new commits, tags and branches from submodule"=\
 Always fetch new commits, tags and branches from submodule
dlgSgPreferences.chk"Automatically set up tracking for new branches \(requires push.default to be unset\)"=\
 Automatically set up tracking for new branches \(requires push.default to be unset\)
dlgSgPreferences.chk"Initialize new submodules"=Initialize new submodules
dlgSgPreferences.chk"Prune obsolete remote tracked branches"=Prune obsolete remote tracked branches
dlgSgPreferences.chk"Send 'crash footprints' after an internal error has occurred"=\
 Send 'crash footprints' after an internal error has occurred
dlgSgPreferences.chk"Sign all commits"=Sign all commits
dlgSgPreferences.chk"Tab enters and Backspace deletes multiple leading spaces"=\
 Tab enters and Backspace deletes multiple leading spaces
dlgSgPreferences.chk"Update registered submodules"=Update registered submodules
dlgSgPreferences.edt"Functionality\*"=Functionality\*
dlgSgPreferences.edt"GPG Program"=GPG Program
dlgSgPreferences.edt"Group Patterns"=Group Patterns
dlgSgPreferences.edt"Name"=Name
dlgSgPreferences.edt"Signing Key"=Signing Key
dlgSgPreferences.edt"Single Patterns"=Single Patterns
dlgSgPreferences.edt"Startup Window"=Startup Window
dlgSgPreferences.edt"Submodule handling\*"=Submodule handling\*
dlgSgPreferences.edt"Text File Encoding"=Text File Encoding
dlgSgPreferences.lbl"Here you can edit your account's 'gitconfig' which contains the defaults for all repositories."=\
 Here you can edit your account's 'gitconfig' which contains the defaults for all repositories.
dlgSgPreferences.lbl"Here you can view your account's 'gitconfig'. Because it contains 'include'-sections you need to edit it manually."=\
 Here you can view your account's 'gitconfig'. Because it contains 'include'-sections you need to edit it manually.
dlgSgPreferences.lbl"Tags, branches and other refs matched by this configuration will be grouped in the File Log and show up in the Commit details. It will also be used for grouping the 'Tags'-category of the Branches view."=\
 Tags, branches and other refs matched by this configuration will be grouped in the File Log and show up in the Commit details. It will also be used for grouping the 'Tags'-category of the Branches view.
dlgSgPreferences.mni"Reset to Default"=Reset to Default
dlgSgPreferences.mni"Select"=Select
dlgSgPreferences.mni"Swap"=Swap
dlgSgPreferences.rbt"Advanced \(merge, rebase, ignore, stashes, tags, history modifications\)"=\
 Advanced \(merge, rebase, ignore, stashes, tags, history modifications\)
dlgSgPreferences.rbt"Basic \(for simple workflows\)"=Basic \(for simple workflows\)
dlgSgPreferences.rbt"Log graph \(commit oriented\)"=Log graph \(commit oriented\)
dlgSgPreferences.rbt"Standard \(workflow oriented\)"=Standard \(workflow oriented\)
dlgSgPreferences.rbt"Working tree \(file oriented\)"=Working tree \(file oriented\)
dlgSgPreferences.tab"Encoding"=Encoding
dlgSgPreferences.tab"Signing"=Signing
dlgSgPreferences.tab"Tag-Grouping"=Tag-Grouping
dlgSgPreferences.tab"User"=User
dlgSgPull.chk"More Options"=More Options
dlgSgPushToRemoteResetTargetBranches.chk=Don't show again
dlgSgRebaseConfirmUnreachable.fur=You only might be able to access this commit using the 'Recyclable Commits' option of the Branches view.
dlgSgRebaseConfirmUnreachable.hdl%1=The Commit $1 would become unreachable by refs.
dlgSgRebaseConfirmUnreachable.tle=Rebase
dlgSgRecursiveStage.chk"Don't show again"=Don't show again
dlgSgRecursiveStage.mni"Toggle"=Toggle
dlgSgRemotesAdd.mni"Add Hosting Provider"=Add Hosting Provider
dlgSgRemotesAdd.mni"Select Local Repository"=Select Local Repository
dlgSgRepositoriesSearch.mni"Path"=Path
dlgSgRepositoriesSearch.mni"Toggle"=Toggle
dlgSgRepositorySettings.err"Please enter a valid, comma-separated list of regular expressions."=\
 Please enter a valid, comma-separated list of regular expressions.
dlgSgRepositorySettings.tab"Encoding"=Encoding
dlgSgRepositorySettings.tab"User"=User
dlgSgRepositorySettings.wrn"The name should not contain an email address."=\
 The name should not contain an email address.
dlgSgResetAdv.chk"Thoroughly fix line-endings according to .gitattributes"=\
 Thoroughly fix line-endings according to .gitattributes
dlgSgResolveManuallyModifiedSingle.btn"Overwrite"=Overwrite
dlgSgResolveManuallyModifiedSingle.fur%1=$1 seems to contain manual conflict resolutions. They will be lost when continuing.
dlgSgResolveManuallyModifiedSingle.hdl=Do you want to overwrite your manual conflict resolution?
dlgSgResolveManuallyModifiedSingle.tle=Resolve
dlgSgRevertConfigurationFile.btn"Revert"=Revert
dlgSgRevertConfigurationFile.fur=Only changes of these files will be reverted \(without committing\).
dlgSgRevertConfigurationFile.hdl"Do you want to revert changes of '$1'?"=\
 Do you want to revert changes of '$1'?
dlgSgRevertConfigurationFile.tle=Revert
dlgSgReviewConfigureForGitHub.btn"Continue"=Continue
dlgSgReviewConfigureForGitHub.fur=This repository is connected to a GitHub server. GitHub comes with its own reviewing concepts, like commit comments and pull requests. Hence, you probably do not want to have SmartGit's review database in addition to GitHub's existing capabilities.
dlgSgReviewConfigureForGitHub.hdl=Do you really want to configure SmartGit's review database for your GitHub repository?
dlgSgReviewConfigureForGitHub.tle=Configure Review System
dlgSgSelectBranch.edt"Auxiliary Branch"=Auxiliary Branch
dlgSgSelectBranch.inf"Select which auxiliary branch should be shown in addition to the current branch."=\
 Select which auxiliary branch should be shown in addition to the current branch.
dlgSgSetup.chk"Register existing license"=Register existing license
dlgSgSetup.chk"Send 'crash footprints' after an internal error has occurred"=\
 Send 'crash footprints' after an internal error has occurred
dlgSgSetup.inf"Decide what SmartGit window you prefer. You can change this option later in the preferences."=\
 Decide what SmartGit window you prefer. You can change this option later in the preferences.
dlgSgSetup.inf"Please review the following privacy options. You can change them later in the preferences."=\
 Please review the following privacy options. You can change them later in the preferences.
dlgSgSetup.inf"Please wait a few moments while searching for a Git installation."=\
 Please wait a few moments while searching for a Git or Hg installation.
dlgSgSetup.inf"SmartGit requires compatible Git installations on your system. Please specify the paths to your 'git' executable."=\
 SmartGit requires compatible Git installations on your system. Please specify the paths to your 'git' executable.
dlgSgSetup.inf"Welcome to SmartGit! Please confirm that you are accepting the license agreement."=\
 Welcome to SmartGit! Please confirm that you are accepting the license agreement.
dlgSgSetup.rbt"Log Graph \(commit oriented\)"=Log Graph \(commit oriented\)
dlgSgSetup.rbt"Standard \(workflow oriented\)"=Standard \(workflow oriented\)
dlgSgSplitOffFiles.btn"Split Off"=Split Off
dlgSgSplitOffFiles.edt"Commit Message"=Commit Message
dlgSgSplitOffFiles.hdl=Move files to a second commit
dlgSgSplitOffFiles.inf=Provide the message for the second commit that should contain the changes from the selected files.
dlgSgSplitOffFiles.tle=Split Off Files
dlgSgStageConflict.btn"Stage Anyway"=Stage Anyway
dlgSgStageConflict.fur=The file contains conflict markers which indicate that you have not resolved all conflicts.
dlgSgStageConflict.hdl%1=Should $1 really be staged?
dlgSgStageConflict.tle=Stage
dlgSgStashesDropConfirm.btn"Drop Stashes"=Drop Stashes
dlgSgSubmoduleAdd.edt"URL"=URL
dlgSgToolAdd.edt"Keyboard Shortcut"=Keyboard Shortcut
dlgSgToolAdd.mni"2nd Commit ID or Ref"=2nd Commit ID or Ref
dlgSgToolEdit.err"Please enter the name for this command."=\
 Please enter the name for this command.
dlgSgWorktreeAddNoMoreLocalBranches.fur=You only can create worktrees for existing local branches that don't yet have an associated worktree.
dlgSgWorktreeAddNoMoreLocalBranches.hdl=No \(more\) local branches available.
dlgSgWorktreeAddNoMoreLocalBranches.tle=Add Worktree
pop"Select the remote to fetch from."=\
 Select the remote to fetch from.
pop"There are no obsolete repositories."=There are no obsolete repositories.
wndConflictSolver.tbtFile-open-base=Open the left and right changes from the common base file.
wndConflictSolver.tbtFile-save=Save file modifications.
wndConflictSolver.tbtGoto-next-diff=Go to next change.
wndConflictSolver.tbtView-layout-left-right-above-merge=Show the left and right files above the merge file.
wndDeepgit.mni"Open File Log"=Open File Log
wndDeepgit.mni"Open Repository Log"=Open Repository Log
wndDeepgit.mniPerspectiveHistory=Diff Perspective
wndDeepgit.mniShowLinePrefixes=Show Line Prefixes
wndDeepgit.tbtPerspectiveHistory=Investigate Diff between file's revisions.
wndDeepgit.tbtPerspectiveOrigins=Find out what else happened where the line originates from.\n\nIn order to inspect available Origins, they have to be evaluated first. First, select the file you want to investigate using File\|Open and select a line in it. Then wait until the calculation of possible Origins has finished.
wndEditor.mni"CR \(classic macOS\)"=CR \(classic macOS\)
wndEditor.mni"CR+LF \(Windows\)"=CR+LF \(Windows\)
wndEditor.mni"LF \(Unix, macOS\)"=LF \(Unix, macOS\)
wndEditor.mniEofEnforceLineEnding=Enforce Line Ending on End of File
wndEditor.mniReplaceTabsWithSpaces=Replace Tabs With Spaces
wndEditor.mniView-remember-as-default=Remember as Default
wndEditor.mniView-settings=Settings
wndEditor.tbtFile-save=Save file modifications.
wndGit.indexEditor.mni"Stage Inner-line Change"=Stage Inner-line Change
wndGit.indexEditor.mni"Stage Line"=Stage Line
wndGit.indexEditor.mni"Stage Selection"=Stage Selection
wndGit.indexEditor.mniView-layout-head-index=HEAD and Index
wndGit.indexEditor.mniView-layout-head-index-wt=All
wndGit.indexEditor.mniView-layout-head-wt-above-index=HEAD and Working Tree Above Index
wndGit.indexEditor.mniView-layout-index-wt=Index and Working Tree
wndGit.indexEditor.tbtGoto-next-diff=Go to next change.
wndGit.indexEditor.tbtGoto-previous-diff=Go to previous change.
wnd(Log|Project|Std)."Abort"=Abort
wnd(Log|Project|Std)."Conflict Solver"=Conflict Solver
wnd(Log|Project|Std)."Continue"=Continue
wnd(Log|Project|Std)."Mark HEAD as Bad"=Mark HEAD as Bad
wnd(Log|Project|Std)."Mark HEAD as Good"=Mark HEAD as Good
wnd(Log|Project|Std)."Mark Resolved"=Mark Resolved
wnd(Log|Project|Std)."Recreate Conflict"=Recreate Conflict
wnd(Log|Project|Std)."Rerun Thoroughly"=Rerun Thoroughly
wnd(Log|Project|Std)."Reset"=Reset
wnd(Log|Project|Std)."Reveal"=Reveal
wnd(Log|Project|Std)."Show Local Changes"=Show Local Changes
wnd(Log|Project|Std)."Step"=Step
wnd(Log|Project|Std)."Swap"=Swap
wnd(Log|Project|Std)."Take Ours"=Take Ours
wnd(Log|Project|Std)."Take Theirs"=Take Theirs
wnd(Log|Project|Std).btn"Mark Resolved"=Mark Resolved
wnd(Log|Project|Std).btn"Show Local Changes"=Show Local Changes
wnd(Log|Project|Std).col"Entry"=Entry
wnd(Log|Project|Std).col"Submodule"=Submodule
wnd(Log|Project|Std).edt"Commit to"=Commit to
wnd(Log|Project|Std).hnt"Filter or Tag Search"=Filter or Tag Search
wnd(Log|Project|Std).lbl"Directory"=Directory
wnd(Log|Project|Std).lbl"Files"=Files
wnd(Log|Project|Std).mni"Assignee"=Assignee
wnd(Log|Project|Std).mni"Copy Name"=Copy Name
wnd(Log|Project|Std).mni"Copy Selection in Column"=Copy Selection in Column
wnd(Log|Project|Std).mni"Ext."=Ext.
wnd(Log|Project|Std).mni"Include Merge Only if File was Changed"=\
 Include Merge Only if File was Changed
wnd(Log|Project|Std).mni"Last Changed On"=Last Changed On
wnd(Log|Project|Std).mni"Merge '$1'"=Merge '$1'
wnd(Log|Project|Std).mni"Name"=Name
wnd(Log|Project|Std).mni"Path"=Path
wnd(Log|Project|Std).mni"Rebase HEAD to '$1'"=Rebase HEAD to '$1'
wnd(Log|Project|Std).mni"Relative Directory"=Relative Directory
wnd(Log|Project|Std).mni"Relative Path"=Relative Path
wnd(Log|Project|Std).mni"Renamed Path"=Renamed Path
wnd(Log|Project|Std).mni"Rewrap"=Rewrap
wnd(Log|Project|Std).mni"Show Unchanged Directories"=Show Unchanged Directories
wnd(Log|Project|Std).mni"Size"=Size
wnd(Log|Project|Std).mni"Sort By Time"=Sort By Time
wnd(Log|Project|Std).mni"Squash"=Squash
wnd(Log|Project|Std).mni"Stage Innerline Change"=Stage Innerline Change
wnd(Log|Project|Std).mni"State"=State
wnd(Log|Project|Std).mni"Text"=Text
wnd(Log|Project|Std).mniBranchContinue=Continue
wnd(Log|Project|Std).mniChangesView.compact=Compact
wnd(Log|Project|Std).mniChangesView.ignoreLineSeparators=Ignore Line-Ending Changes
wnd(Log|Project|Std).mniChangesView.sideBySide=Side by Side
wnd(Log|Project|Std).mniChangesView.unified=Unified
wnd(Log|Project|Std).mniFastForward=Fast-Forward Merge
wnd(Log|Project|Std).mniModifyCommit=Modify
wnd(Log|Project|Std).mniNewStandardWindow=Show Standard Window
wnd(Log|Project|Std).mniOpenUserEcho=Feature Requests
wnd(Log|Project|Std).mniSearch-find=Find
wnd(Log|Project|Std).mniSearch-next=Find Next
wnd(Log|Project|Std).mniSearch-previous=Find Previous
wnd(Log|Project|Std).mniSplitCommit=Split
wnd(Log|Project|Std).tbr"  History  "=History
wnd(Log|Project|Std).tbr"Add or Create"=Add or Create
wnd(Log|Project|Std).tbr"Changes"=Changes
wnd(Log|Project|Std).tbr"Clone"=Clone
wnd(Log|Project|Std).tbr"Conflict Solver"=Conflict Solver
wnd(Log|Project|Std).tbr"Drop Stash"=Drop Stash
wnd(Log|Project|Std).tbr"Fetch"=Fetch
wnd(Log|Project|Std).tbr"Finish"=Finish
wnd(Log|Project|Std).tbr"Ignore"=Ignore
wnd(Log|Project|Std).tbr"Integrate"=Integrate
wnd(Log|Project|Std).tbr"Local Files"=Local Files
wnd(Log|Project|Std).tbr"Log Selection"=Log Selection
wnd(Log|Project|Std).tbr"Push To"=Push To
wnd(Log|Project|Std).tbr"Reset Adv."=Reset Adv.
wnd(Log|Project|Std).tbr"Search"=Search
wnd(Log|Project|Std).tbr"Start"=Start
wnd(Log|Project|Std).tbt"If selected, files from subdirectories are shown."=\
 If selected, files from subdirectories are shown.
wnd(Log|Project|Std).tbtBranchAdd=Add a new branch for the current commit.
wnd(Log|Project|Std).tbtBranchAddTag=Add a new tag for the current commit.
wnd(Log|Project|Std).tbtConflictSolver=Open the Conflict Solver \(or configured external merge tool\) to resolve conflicts.
wnd(Log|Project|Std).tbtFlowFeatureFinish=Finish a Git-Flow feature.
wnd(Log|Project|Std).tbtFlowFeatureStart=Start a new Git-Flow feature.
wnd(Log|Project|Std).tbtFlowHotfixFinish=Finish a Git-Flow hotfix.
wnd(Log|Project|Std).tbtFlowHotfixStart=Start a new Git-Flow hotfix.
wnd(Log|Project|Std).tbtFlowIntegrateDevelop=Integrate new base commits into a Git-Flow feature.
wnd(Log|Project|Std).tbtIgnore=Mark unversioned local files/directories to be ignored.
wnd(Log|Project|Std).tbtPreviewRefresh=Reload the previewed file contents.
wnd(Log|Project|Std).tbtPushTo=Push local commits to a remote repository, allowing to choose the target repository.
wnd(Log|Project|Std).tbtRefresh=Refresh the log view.
wnd(Log|Project|Std).tbtRemoteFetch=Fetch commits from all remote repositories.
wnd(Log|Project|Std).tbtRepositoryAdd=Add or create a new repository.
wnd(Log|Project|Std).tbtRepositoryClone=Clone a new repository.
wnd(Log|Project|Std).tbtRepositorySearch=Search for existing repositories.
wnd(Log|Project|Std).tbtResetAdvanced=Reset current HEAD to another commit and keep the difference in Index or Working Tree.
wnd(Log|Project|Std).tbtShowChanges=Open the file compare for the selected file.
wnd(Log|Project|Std).tbtStashDrop=Drop one or more stashes from the repository.
wnd(Log|Project|Std).tbtStdSetModeHistory=Show the history view.
wnd(Log|Project|Std).tbtStdSetModeWt=Show the local files of the repository \(Working Tree\).
wnd(Log|Project|Std).tbtViewRenameSource=If selected, removed/missing source files of detected renames will be shown.
wnd(Log|Project|Std).tbtWindowLayoutSetReview=Switch to the Review perspective.
