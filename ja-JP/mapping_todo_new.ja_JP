dlgScUpdateInstallationUpdateManuallyFailure.fur=The process could not be started.
dlgScUpdateInstallationUpdateManuallyFailure.hdl=Launching updater directly failed.
dlgScUpdateInstallationUpdateManuallyFailure.tle=SmartGit Installation Update
dlgSgClone.lbl"Note: Pull or Fetch will not bring other refs, you will need to use Fetch More."=\
 Note: Pull or Fetch will not bring other refs, you will need to use Fetch More.
dlgSgClone.lbl"e.g. https://user@server:port/path/to/repository"=e.g. https://user@server:port/path/to/repository
dlgSgCommitDirectlyTo.btn"Commit Anyway"=Commit Anyway
dlgSgCommitDirectlyTo.fur=You have Git-Flow configured and committing to the Git-Flow master branch should not happen directly but only with the help of the Git-Flow commands and merging.\n\nIf in doubt, please contact your administrator.
dlgSgCommitDirectlyTo.hdl=Do you want to commit directly to 'master'?
dlgSgCommitDirectlyTo.tle=Commit
dlgSgFlowHotfixFinish.edt"Commit/Tag Message"=Commit/Tag Message
dlgSgFlowSupportStart.btn"Start"=Start
dlgSgFlowSupportStart.chk"Fetch from '$1' branch"=Fetch from '$1' branch
dlgSgFlowSupportStart.edt"Support Name"=Support Name
dlgSgFlowSupportStart.hdl=Start a new support
dlgSgFlowSupportStart.inf%1=Enter the name of the new support branch. This operation will fork a new branch from the '$1' branch.
dlgSgFlowSupportStart.lbl"Resulting Branch: $1"=Resulting Branch: $1
dlgSgFlowSupportStart.tle=Start Support
dlgSgMergeConfirmNoCommit.btn"Merge"=Merge
dlgSgMergeConfirmNoCommit.fur=The selected revisions\(s\) will be merged to the working tree.\n\nNote that merging directly to the GitFlow-master branch is not recommended. Instead, you should start a hotfix.
dlgSgMergeConfirmNoCommit.hdl=Do you want to perform the merge?
dlgSgMergeConfirmNoCommit.tle=Merge
dlgSgMergeNoop.fur=Merging a commit into itself is technically allowed by Git but it's a no-op and will not give a new commit nor any other meaningful changes.
dlgSgMergeNoop.hdl=There is nothing to merge.
dlgSgMergeNoop.tle=Merge
dlgSgOpenRepositorySvnWorkingCopy.fur%1=You are trying to open an existing SVN working copy which is not possible with SmartGit. Instead, please use $1 to create a Git clone of your SVN repository \(i.e. a working copy based on Git instead of SVN\).
dlgSgOpenRepositorySvnWorkingCopy.hdl=Can't open SVN working copy, please re-clone with SmartGit.
dlgSgOpenRepositorySvnWorkingCopy.tle=Add or Create Repository
dlgSgOutput.lbl"Command Start Support Branch failed!"=Command Start Support Branch failed!
dlgSgRepositorySettings.lbl"\* if repository commit references non-pushed submodule commit"=\
 \* if repository commit references non-pushed submodule commit
dlgSgSplitOffFilesEmptyCommit.fur=By splitting off all files, the resulting commit would become empty.
dlgSgSplitOffFilesEmptyCommit.hdl=You can't split off all files from a commit
dlgSgSplitOffFilesEmptyCommit.tle=Commit
dlgSgStashOnDemandProceedWithoutStashing.btn"Proceed"=Proceed
dlgSgStashOnDemandProceedWithoutStashing.fur=Auto-stashing changes is not possible due to technical reasons. Changes will be discarded!
dlgSgStashOnDemandProceedWithoutStashing.hdl=Do you want to proceed without stashing changes?
dlgSgStashOnDemandProceedWithoutStashing.tle=Reset
dlgSgSubmoduleAdd.lbl"e.g. https://user@server:port/path/to/repository"=e.g. https://user@server:port/path/to/repository
dlgSgSubmoduleSync.btn"Synchronize"=Synchronize
dlgSgSubmoduleSync.chk"Pull submodule repositories"=Pull submodule repositories
dlgSgSubmoduleSync.hdl=Synchronize all submodules
dlgSgSubmoduleSync.inf=Submodule entries will be updated in .git/config. You may customize the URLs afterwards or pull immediately.
dlgSgSubmoduleSync.tle=Synchronize Submodules
dlgSgSubtreeAdd.chk"Create local branch \(for advanced operations\)"=\
 Create local branch \(for advanced operations\)
dlgSgSubtreeAdd.chk"Squash subtree into single commit"=Squash subtree into single commit
dlgSgSubtreeAdd.edt"Branch"=Branch
dlgSgSubtreeAdd.edt"Local Directory"=Local Directory
dlgSgSubtreeAdd.edt"Local Path"=Local Path
dlgSgSubtreeAdd.edt"Remote"=Remote
dlgSgSubtreeAdd.edt"Repository URL"=Repository URL
dlgSgSubtreeAdd.inf"Provide the path where the subtree should be added relative to the outer repository root directory."=\
 Provide the path where the subtree should be added relative to the outer repository root directory.
dlgSgSubtreeAdd.inf"Specify the repository to clone as subtree."=\
 Specify the repository to clone as subtree.
dlgSgSubtreeAdd.lbl"Local branches for subtrees will only be useful if you plan to use Subtree-Split and Subtree-Reset operations."=\
 Local branches for subtrees will only be useful if you plan to use Subtree-Split and Subtree-Reset operations.
dlgSgSubtreeAdd.lbl"e.g. https://user@server:port/path/to/repository"=e.g. https://user@server:port/path/to/repository
dlgSgSubtreeAdd.rbt"Local repository"=Local repository
dlgSgSubtreeAdd.rbt"Remote repository"=Remote repository
dlgSgSubtreeAdd.tle=Add Subtree
dlgSgTagAdd.chk"GPG-sign tag"=GPG-sign tag
dlgSgTool(Add|Edit).rbt"Commits"=Commits
wndAnnotate.mni"Copy Details"=Copy Details
wndAnnotate.mni"Copy ID"=Copy ID
wndAnnotate.mni"Copy Selection"=Copy Selection
wndAnnotate.mni"Open Log"=Open Log
wndAnnotate.mni"Show Changes"=Show Changes
wndConflictSolver.tbr"Base + Right"=Base + Right
wndConflictSolver.tbr"Base Below"=Base Below
wndConflictSolver.tbr"Left + Base"=Left + Base
wndConflictSolver.tbtEdit-take-left=Take the left block to the merge result. Depending on the left block, this will insert, replace or delete at the merge result.
wndConflictSolver.tbtEdit-take-left-right=Take the left block, then the right one.
wndConflictSolver.tbtEdit-take-right=Take the right block to the merge result. Depending on the right block, this will insert, replace or delete at the merge result.
wndConflictSolver.tbtEdit-take-right-left=Take the right block, then the left one.
wndConflictSolver.tbtGoto-previous-conflict=Go to previous conflict.
wndConflictSolver.tbtGoto-previous-diff=Go to previous change.
wndConflictSolver.tbtView-layout-all=Show the left, merge and right file.
wndConflictSolver.tbtView-layout-left-merge=Show the left and merge file.
wndConflictSolver.tbtView-layout-right-merge=Show the merge and right file.
wndDeepgit.mni"Copy Details"=Copy Details
wndDeepgit.mni"Copy ID"=Copy ID
wndDeepgit.mniOptimizeCreationOrigins=Optimize 'Appeared Here' Origins
wndDeepgit.mniShowAtRefs=Show At Refs
wndDeepgit.mniShowOnRefs=Show On Refs
wndGit.indexEditor.tbtEdit-take-right=Take the right block to the merge result. Depending on the right block, this will insert, replace or delete at the merge result.
wndProject.mni"Log Selection"=Log Selection
wnd(Log|Project|Std).mni"Sort First Parents before Merge Parents"=\
 Sort First Parents before Merge Parents
wnd(Log|Project|Std).mni"Sort Merge Parents before First Parents"=\
 Sort Merge Parents before First Parents
wnd(Log|Project|Std).mniSortCommitsFirstParentsBeforeMergeParents=Sort First Parents before Merge Parents
wnd(Log|Project|Std).mniSortCommitsMergeParentsBeforeFirstParents=Sort Merge Parents before First Parents
